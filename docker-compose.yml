services:
  db:
    image: postgres:15.8
    restart: always
    container_name: latitude-llm-db
    ports:
      - '5034:5432'
    env_file:
      - .env
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./volumes/pgdata:/var/lib/postgresql/data
    networks:
      - dev-net

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - dev-net

  redis:
    image: redis
    restart: always
    container_name: latitude-llm-redis
    ports:
      - '6379:6379'
    networks:
      - dev-net

  web:
    image: latitude/web:latest
    build:
      context: .
      dockerfile: apps/web/docker/Dockerfile
    restart: always
    container_name: latitude-llm-web
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./volumes/web/storage/files:/app/storage/files:rw
      - ./volumes/web/public/files:/app/apps/web/public/files:rw
    environment:
      - NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=${NEXT_SERVER_ACTIONS_ENCRYPTION_KEY}
    ports:
      - "5000:8080"
    depends_on:
      - db
      - redis
    networks:
      - dev-net

  migrations:
    image: latitude/migrations:latest
    build:
      context: .
      dockerfile: packages/core/docker/Dockerfile
    container_name: latitude-llm-migrations
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./volumes/web/storage/files:/app/storage/files:rw
      - ./volumes/web/public/files:/app/apps/web/public/files:rw
    labels:
      - "traefik.enable=false"
    depends_on:
      - db
    networks:
      - dev-net

  gateway:
    image: latitude/gateway:latest
    build:
      context: .
      dockerfile: apps/gateway/docker/Dockerfile
    restart: always
    container_name: latitude-llm-gateway
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./volumes/web/storage/files:/app/storage/files:rw
      - ./volumes/web/public/files:/app/apps/web/public/files:rw
    ports:
      - "5011:8787"
    depends_on:
      - db
      - redis
    networks:
      - dev-net

  workers:
    image: latitude/workers:latest
    build:
      context: .
      dockerfile: apps/workers/docker/Dockerfile
    restart: always
    container_name: latitude-llm-workers
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./volumes/web/storage/files:/app/storage/files:rw
      - ./volumes/web/public/files:/app/apps/web/public/files:rw
    depends_on:
      - db
      - redis
    networks:
      - dev-net

  websockets:
    image: latitude/websockets:latest
    build:
      context: .
      dockerfile: apps/websockets/docker/Dockerfile
    restart: always
    container_name: latitude-llm-websockets
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./volumes/web/storage/files:/app/storage/files:rw
      - ./volumes/web/public/files:/app/apps/web/public/files:rw
    ports:
      - "5030:8080"
    depends_on:
      - db
      - redis
    networks:
      - dev-net

# You need to create external network for Traefik to work (docker network create web)
networks:
  dev-net:
    name: dev-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.50.0.0/16
          gateway: 172.50.0.1
    external: true
