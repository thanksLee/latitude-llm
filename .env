# Environment
NODE_ENV=production

# Database
POSTGRES_USER=latitude
POSTGRES_PASSWORD=secret
DATABASE_URL=postgresql://latitude:secret@db:5432/latitude_production
READ_DATABASE_URL=postgresql://latitude:secret@db:5432/latitude_production # Can be different from DATABASE_URL
READ_2_DATABASE_URL=postgresql://latitude:secret@db:5432/latitude_production # Can be different from DATABASE_URL

# Redis
QUEUE_PORT=6379
QUEUE_HOST=redis
CACHE_PORT=6379
CACHE_HOST=redis
CACHE_PASSWORD= # Optional: set your cache password if Redis requires authentication

# Gateway Configuration
GATEWAY_BIND_ADDRESS=localhost
GATEWAY_BIND_PORT=8787
GATEWAY_HOSTNAME=gateway # e.g gateway.myapp.com
GATEWAY_PORT=8080
GATEWAY_SSL=false

# Networking
APP_DOMAIN=chejuman.life # e.g myapp.com
APP_URL=https://app-latitude.chejuman.life # e.g https://app.mayapp.com
NEXT_PUBLIC_DOCS_URL=https://docs-latitude.chejuman.life # e.g https://docs.mayapp.com

# Traefik
TRAEFIK_HOST=traefik.${APP_DOMAIN}
TRAEFIK_ACME_EMAIL=admin@abcd.co
# Passwords must be hashed using MD5, SHA1, or BCrypt. Read more: https://doc.traefik.io/traefik/middlewares/http/basicauth/
# Example command to generate a password for user admin: echo $(htpasswd -nb admin password) | sed -e s/\\$/\\$\\$/g
# echo $(htpasswd -nb admin Vunoabcdef) | sed -e s/\\$/\\$\\$/g
#   Vunoabcdef
TRAEFIK_ADMIN_PASS="$$apr1$$k1HIhgav$$r3bg87HOuV9qzSLVkrorC0"

# Websockets
WEBSOCKETS_SERVER=http://websockets
WEBSOCKETS_SERVER_PORT=8080
WEBSOCKET_REFRESH_SECRET_TOKEN_KEY=websocket-refresh-secret-token
WEBSOCKET_SECRET_TOKEN_KEY=websocket-secret-token

# Email Configuration
MAIL_TRANSPORT= mailpit # smtp, mailgun, mailpit - default transport is mailpit
FROM_MAILER_EMAIL=hello@latitude.localhost # e.g hello@mayapp.com
MAILGUN_EMAIL_DOMAIN=latitude.localhost # e.g email.myapp.com
MAILGUN_MAILER_API_KEY= # (optional)
MAILGUN_HOST=api.eu.mailgun.net # (optional)
MAILGUN_PROTOCOL=https # (optional)
# SMTP Email Configuration (if MAIL_TRANSPORT is set to smtp)
# NOTE: If you are using Mailpit, you can skip SMTP configuration
SMTP_HOST= # e.g. smtp.gmail.com
SMTP_PORT=465 # e.g. 465 or 587
SMTP_SECURE=true # e.g. true SMTPS (465) or false for STARTTLS (587)
SMTP_USER=your_email@gmail.com # your email address
SMTP_PASS=your_app_password # your email password (app password for Gmail)

# Sentry (optional)
NEXT_PUBLIC_SENTRY_DSN=
SENTRY_AUTH_TOKEN=
SENTRY_DSN=
SENTRY_ORG=
SENTRY_PROJECT=

# File storage
# NOTE: In docker environment "local" strategy will not work out of the box since
# multiple containers would need to have access to the same local disk. You can use "s3" strategy instead
# or set up a shared volume and point the public files path to it.
DRIVE_DISK=local # options: local, s3

# Paths for local storage (optional)
FILE_STORAGE_ROOT_PATH="/app/storage/files" # e.g /app/storage/files
FILE_PUBLIC_PATH="files" # e.g files
FILES_STORAGE_PATH="/app/storage/files" # e.g /app/storage/files
PUBLIC_FILES_STORAGE_PATH="/app/apps/web/public/files" # e.g /app/storage/public/files (IMPORTANT: has to be in nextjs's public folder)

# AWS S3 (optional)
# If you are using AWS IAM roles, you can skip AWS_ACCESS_KEY and AWS_ACCESS_SECRET
ASW_REGION=
AWS_ACCESS_KEY=
AWS_ACCESS_SECRET=
PUBLIC_S3_BUCKET=
S3_BUCKET=

# Analytics (optional)
NEXT_PUBLIC_POSTHOG_KEY=
NEXT_PUBLIC_POSTHOG_HOST=

# Google OAuth
GOOGLE_CLIENT_ID=fake
GOOGLE_CLIENT_SECRET=fake
GOOGLE_REDIRECT_URI=${APP_URL}/api/auth/google/callback

# Next.js Server Actions
# This key is used to encrypt server actions. It must be the same across all server instances.
# You can generate a key using the tools/generate-server-action-key.js script.
NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=

# New workspaces come preconfigured with an OpenAI provider, here you can
# configure its API key. If you don't configure this correctly the onboarding
# will not work (but you can skip it).
DEFAULT_PROVIDER_API_KEY=openai-api-key

# =========================================
# Traefik 관련 설정
# =========================================
# 2단계에서 준비한, 서버 IP에 연결된 개인 도메인 주소를 입력합니다.
DOMAIN_NAME=app-latitude.chejuman.life


# Let's Encrypt SSL 인증서 발급 시 사용할 이메일 주소를 입력합니다.
# 인증서 만료 알림 등을 받을 때 사용됩니다.
TRAEFIK_EMAIL=myemail@example.com

# =========================================
# Latitude LLM 웹앱 관련 설정
# =========================================
# Ollama 서비스가 동작하는 주소입니다. Docker 내부 통신을 사용하므로 보통 수정할 필요가 없습니다.
NEXT_PUBLIC_OLLAMA_URL=http://ollama.chejuman.life

# 웹 UI에 표시될 모델 이름입니다. Ollama가 실제로 사용할 모델과 일치시키는 것이 좋습니다.
# 예: "llama3:latest", "qwen2:7b" 등 (아래 OLLAMA_MODEL과 동일하게 설정)
NEXT_PUBLIC_DEFAULT_MODEL=llama3:latest

# 기타 필요한 API 키나 설정이 있다면 여기에 추가합니다.
# (프로젝트의 README를 참고하여 추가 설정이 필요한지 확인하세요.)

# =========================================
# Ollama 백엔드 관련 설정
# =========================================
# Docker Compose 실행 시 Ollama가 기본으로 내려받고 실행할 모델을 지정합니다.
OLLAMA_MODEL=qwen3:32b

DISABLE_EMAIL_AUTHENTICATION=true # 이메일 인증을 비활성화하려면 true로 설정합니다.